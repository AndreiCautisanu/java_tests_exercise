/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.6/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use TestNG framework, also requires calling test.useTestNG() below
    testImplementation libs.testng

    // This dependency is used by the application.
    implementation libs.guava

    implementation 'org.wiremock:wiremock:3.3.1'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5
    testImplementation 'org.apache.httpcomponents.client5:httpclient5:5.3.1'

    // https://mvnrepository.com/artifact/org.testng/testng
    testImplementation 'org.testng:testng:7.9.0'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    mainClassName = 'api_mocks.MockServer'
}

task startWireMock(type:JavaExec) {
    classpath(sourceSets.test.runtimeClasspath)
    main('api_mocks.MockServer')
}

tasks.named('run', JavaExec) {
    dependsOn testClasses
    classpath(sourceSets.test.runtimeClasspath)
}

test {
    // Use TestNG for unit tests.
    useTestNG() {
        useDefaultListeners = true
        suites "src/test/testng.xml"
    }
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}
